{"ast":null,"code":"import _objectSpread from \"/workspaces/Portfolio-do-Felipe-Roberto-Rocha/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent(_ref) {\n  let {\n    preloadedFeatures,\n    createVisualElement,\n    useRender,\n    useVisualState,\n    Component\n  } = _ref;\n  preloadedFeatures && loadFeatures(preloadedFeatures);\n  function MotionComponent(props, externalRef) {\n    /**\n     * If we need to measure the element we load this functionality in a\n     * separate class component in order to gain access to getSnapshotBeforeUpdate.\n     */\n    let MeasureLayout;\n    const configAndProps = _objectSpread(_objectSpread(_objectSpread({}, useContext(MotionConfigContext)), props), {}, {\n      layoutId: useLayoutId(props)\n    });\n    const {\n      isStatic\n    } = configAndProps;\n    const context = useCreateMotionContext(props);\n    const visualState = useVisualState(props, isStatic);\n    if (!isStatic && isBrowser) {\n      useStrictMode(configAndProps, preloadedFeatures);\n      const layoutProjection = getProjectionFunctionality(configAndProps);\n      MeasureLayout = layoutProjection.MeasureLayout;\n      /**\n       * Create a VisualElement for this component. A VisualElement provides a common\n       * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n       * providing a way of rendering to these APIs outside of the React render loop\n       * for more performant animations and interactions\n       */\n      context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n    }\n    /**\n     * The mount order and hierarchy is specific to ensure our element ref\n     * is hydrated by the time features fire their effects.\n     */\n    return jsxs(MotionContext.Provider, {\n      value: context,\n      children: [MeasureLayout && context.visualElement ? jsx(MeasureLayout, _objectSpread({\n        visualElement: context.visualElement\n      }, configAndProps)) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)]\n    });\n  }\n  const ForwardRefComponent = forwardRef(MotionComponent);\n  ForwardRefComponent[motionComponentSymbol] = Component;\n  return ForwardRefComponent;\n}\nfunction useLayoutId(_ref2) {\n  let {\n    layoutId\n  } = _ref2;\n  const layoutGroupId = useContext(LayoutGroupContext).id;\n  return layoutGroupId && layoutId !== undefined ? layoutGroupId + \"-\" + layoutId : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n  const isStrict = useContext(LazyContext).strict;\n  /**\n   * If we're in development mode, check to make sure we're not rendering a motion component\n   * as a child of LazyMotion, as this will break the file-size benefits of using it.\n   */\n  if (process.env.NODE_ENV !== \"production\" && preloadedFeatures && isStrict) {\n    const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n    configAndProps.ignoreStrict ? warning(false, strictMessage) : invariant(false, strictMessage);\n  }\n}\nfunction getProjectionFunctionality(props) {\n  const {\n    drag,\n    layout\n  } = featureDefinitions;\n  if (!drag && !layout) return {};\n  const combined = _objectSpread(_objectSpread({}, drag), layout);\n  return {\n    MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props)) ? combined.MeasureLayout : undefined,\n    ProjectionNode: combined.ProjectionNode\n  };\n}\nexport { createMotionComponent };","map":{"version":3,"names":["jsxs","jsx","forwardRef","useContext","MotionConfigContext","MotionContext","useVisualElement","useMotionRef","useCreateMotionContext","loadFeatures","isBrowser","LayoutGroupContext","LazyContext","motionComponentSymbol","warning","invariant","featureDefinitions","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","MotionComponent","props","externalRef","MeasureLayout","configAndProps","_objectSpread","layoutId","useLayoutId","isStatic","context","visualState","useStrictMode","layoutProjection","getProjectionFunctionality","visualElement","ProjectionNode","Provider","value","children","ForwardRefComponent","_ref2","layoutGroupId","id","undefined","isStrict","strict","process","env","NODE_ENV","strictMessage","ignoreStrict","drag","layout","combined","isEnabled"],"sources":["/workspaces/Portfolio-do-Felipe-Roberto-Rocha/node_modules/framer-motion/dist/es/motion/index.mjs"],"sourcesContent":["import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createMotionComponent };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}